# Optional Monitoring Stack for TinyBoards
# This extends the main production setup with comprehensive monitoring

version: '3.8'

services:
  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: tinyboards_prometheus
    ports:
      - "127.0.0.1:9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/rules:/etc/prometheus/rules:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - tinyboards_prod
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: tinyboards_grafana
    ports:
      - "127.0.0.1:3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-changeme}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      - GF_SERVER_ROOT_URL=https://${DOMAIN}/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    networks:
      - tinyboards_prod
    restart: unless-stopped
    depends_on:
      - prometheus
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    user: "472:472"

  # AlertManager for alerts
  alertmanager:
    image: prom/alertmanager:latest
    container_name: tinyboards_alertmanager
    ports:
      - "127.0.0.1:9093:9093"
    volumes:
      - ./alertmanager:/etc/alertmanager:ro
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=https://${DOMAIN}/alertmanager/'
      - '--web.route-prefix=/'
    networks:
      - tinyboards_prod
    restart: unless-stopped
    depends_on:
      - prometheus
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=50m

  # Loki for log aggregation
  loki:
    image: grafana/loki:latest
    container_name: tinyboards_loki
    ports:
      - "127.0.0.1:3100:3100"
    volumes:
      - ./loki:/etc/loki:ro
      - loki_data:/loki
    command: -config.file=/etc/loki/loki.yml
    networks:
      - tinyboards_prod
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL

  # Promtail for log collection
  promtail:
    image: grafana/promtail:latest
    container_name: tinyboards_promtail
    volumes:
      - ./promtail:/etc/promtail:ro
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: -config.file=/etc/promtail/promtail.yml
    networks:
      - tinyboards_prod
    restart: unless-stopped
    depends_on:
      - loki
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    read_only: true

  # cAdvisor for container metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: tinyboards_cadvisor
    ports:
      - "127.0.0.1:8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg
    networks:
      - tinyboards_prod
    restart: unless-stopped
    command:
      - '--housekeeping_interval=30s'
      - '--docker_only=true'
      - '--store_container_labels=false'

  # Blackbox Exporter for endpoint monitoring
  blackbox-exporter:
    image: prom/blackbox-exporter:latest
    container_name: tinyboards_blackbox
    ports:
      - "127.0.0.1:9115:9115"
    volumes:
      - ./blackbox:/etc/blackbox:ro
    command:
      - '--config.file=/etc/blackbox/blackbox.yml'
    networks:
      - tinyboards_prod
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    read_only: true

  # Jaeger for distributed tracing (optional)
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: tinyboards_jaeger
    ports:
      - "127.0.0.1:16686:16686"
      - "127.0.0.1:14268:14268"
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    networks:
      - tinyboards_prod
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL

networks:
  tinyboards_prod:
    external: true
    name: tinyboards_prod_network

volumes:
  prometheus_data:
    name: tinyboards_prometheus_data
    driver: local
  grafana_data:
    name: tinyboards_grafana_data
    driver: local
  alertmanager_data:
    name: tinyboards_alertmanager_data
    driver: local
  loki_data:
    name: tinyboards_loki_data
    driver: local