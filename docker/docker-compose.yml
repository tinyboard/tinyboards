version: '3.3'

services:
  nginx:
    image: nginx:1-alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/conf/:/etc/nginx/conf.d
      - /etc/ssl:/etc/ssl/
    networks:
      tinyboards:
        aliases:
          - example.com
    restart: always
    depends_on:
      - tinyboards-fe
      - pictrs

  tinyboards:
    image: kronusdev/tinyboards-be:latest
    ports:
      - "127.0.0.1:8536:8536"
      - "127.0.0.1:6669:6669"
    restart: always
    environment:
      - RUST_LOG="info"
    links:
      - postgres
    volumes:
      - ./tinyboards.hjson:/config/defaults.hjson
    networks:
      tinyboards:
        aliases:
          - tinyboards-be
    depends_on:
      - postgres
      - pictrs

  tinyboards-fe:
    image: kronusdev/tinyboards-fe:latest
    ports:
      - "127.0.0.1:3000:3000"
    restart: always
    networks:
      tinyboards:
        aliases:
          - tinyboards-fe
    depends_on:
      - tinyboards

  pictrs:
    image: asonix/pictrs:0.4.0-beta.7
    # needs to match the pictrs url in the config hjson
    hostname: pictrs
    ports:
      - "127.0.0.1:8080:8080"
    networks:
      tinyboards:
        aliases:
          - pictrs
    environment:
      - PICTRS__API_KEY=API_KEY
    user: root
    volumes:
      - ./volumes/pictrs:/mnt
    restart: always

  postgres:
    image: postgres:14-alpine
    ports:
      # use a different port so it doesn't conflict with postgres running on the host
      - "127.0.0.1:5433:5432"
    environment:
      - POSTGRES_USER=tinyboards
      - POSTGRES_PASSWORD=tinyboards
      - POSTGRES_DB=tinyboards
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
    networks:
      tinyboards:
        aliases:
          - postgres
    restart: always
    command: ["postgres", "-c", "session_preload_libraries=auto_explain", "-c", "auto_explain.log_min_duration=5ms", "-c", "auto_explain.log_analyze=true"]

networks:
  tinyboards: {}