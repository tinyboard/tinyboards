# Multi-stage build for optimal caching and security
ARG RUST_VERSION=1.75
ARG DEBIAN_VERSION=bookworm

# Build stage
FROM rust:${RUST_VERSION}-slim-${DEBIAN_VERSION} as builder

# Install system dependencies in a single layer
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    libpq-dev \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Create a non-root user for building
RUN groupadd --gid 10001 app && \
    useradd --uid 10001 --gid app --create-home app
USER app

WORKDIR /home/app/build

# Copy dependency manifests first for better caching
COPY --chown=app:app Cargo.toml Cargo.lock ./
COPY --chown=app:app crates ./crates

# Create dummy main.rs to cache dependencies
RUN mkdir -p src && echo "fn main() {}" > src/main.rs

# Build dependencies (this layer gets cached)
RUN cargo build --release --locked
RUN rm src/main.rs target/release/deps/tinyboards_server*

# Copy source code
COPY --chown=app:app src ./src

# Build the actual application
RUN cargo build --release --locked

# Strip the binary to reduce size
RUN strip target/release/tinyboards_server

# Runtime stage
FROM debian:${DEBIAN_VERSION}-slim as runtime

# Install runtime dependencies only
RUN apt-get update && apt-get install -y \
    ca-certificates \
    libpq5 \
    libssl3 \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get autoremove -y \
    && apt-get clean

# Create a non-root user for runtime
RUN groupadd --gid 10001 app && \
    useradd --uid 10001 --gid app --create-home app --shell /sbin/nologin

# Create necessary directories with correct permissions
RUN mkdir -p /app/media /config && \
    chown -R app:app /app /config

USER app
WORKDIR /app

# Copy the binary from builder stage
COPY --from=builder --chown=app:app /home/app/build/target/release/tinyboards_server ./tinyboards
COPY --from=builder --chown=app:app /home/app/build/config/defaults.hjson /config/defaults.hjson

# Fix the config file (replace 'unset' with 'localhost')
RUN sed -i 's/unset/localhost/g' /config/defaults.hjson

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8536/api/v1/site || exit 1

# Expose port
EXPOSE 8536

# Use exec form to ensure proper signal handling
CMD ["./tinyboards"]