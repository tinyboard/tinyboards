use crate::schema::users;
use diesel::prelude::*;
use serde::{Deserialize, Serialize};


#[derive(Clone, Default, Insertable, AsChangeset)]
#[diesel(table_name = users)]
pub struct UserForm {
    username: String,
    email: Option<String>,
    admin_level: Option<i16>,
    is_activated: Option<bool>,
    over_18: Option<bool>,
    bio: Option<String>,
    bio_html: Option<String>,
    is_banned: Option<bool>,
    unban_utc: Option<i64>,
    ban_reason: Option<String>,
    defaultsorting: Option<String>,
    defaulttime: Option<String>,
    feed_nonce: Option<i64>,
    login_nonce: Option<i64>,
    title_id: Option<Option<i32>>,
    has_profile: Option<bool>,
    has_banner: Option<bool>,
    reserved: Option<String>,
    is_nsfw: Option<bool>,
    tos_agreed_utc: Option<i64>,
    profile_nonce: Option<i64>,
    banner_nonce: Option<i64>,
    mfa_secret: Option<String>,
    hide_offensive: Option<bool>,
    hide_bot: Option<bool>,
    show_nsfl: Option<bool>,
    is_private: Option<bool>,
    is_deleted: Option<bool>,
    delete_reason: Option<String>,
    filter_nsfw: Option<bool>,
    stored_karma: Option<i32>,
    stored_subscriber_count: Option<i32>,
    auto_join_chat: Option<bool>,
    is_nofollow: Option<bool>,
    custom_filter_list: Option<String>,
    discord_id: Option<String>,
    creation_region: Option<String>,
    ban_evade: Option<i32>,
    profile_upload_ip: Option<String>,
    banner_upload_ip: Option<String>,
    profile_upload_region: Option<String>,
    banner_upload_region: Option<String>,
    color: Option<String>,
    secondary_color: Option<String>,
    comment_signature: Option<String>,
    comment_signature_html: Option<String>,
    profile_set_utc: Option<i64>,
    bannner_set_utc: Option<i64>,
    original_username: Option<String>,
    name_changed_utc: Option<i64>,
}



#[derive(Queryable, Serialize, Deserialize)]
pub struct User {
    pub id: i32,
    pub username: String,
    pub email: Option<String>,
    pub passhash: String,
    pub created_utc: i64,
    pub admin_level: i16,
    pub is_activated: bool,
    pub over_18: bool,
    pub creation_ip: String,
    pub bio: String,
    pub bio_html: String,
    pub referred_by: Option<i32>,
    pub is_banned: bool,
    pub unban_utc: i64,
    pub ban_reason: String,
    pub defaultsorting: Option<String>,
    pub defaulttime: Option<String>,
    pub feed_nonce: i64,
    pub login_nonce: i64,
    pub title_id: Option<i32>,
    pub has_profile: bool,
    pub has_banner: bool,
    pub reserved: Option<String>,
    pub is_nsfw: bool,
    pub tos_agreed_utc: i64,
    pub profile_nonce: i64,
    pub banner_nonce: i64,
    pub mfa_secret: Option<String>,
    pub hide_offensive: bool,
    pub hide_bot: bool,
    pub show_nsfl: bool,
    pub is_private: bool,
    pub is_deleted: bool,
    pub delete_reason: String,
    pub filter_nsfw: bool,
    pub stored_karma: i32,
    pub stored_subscriber_count: i32,
    pub auto_join_chat: bool,
    pub is_nofollow: bool,
    pub custom_filter_list: String,
    pub discord_id: Option<String>,
    pub creation_region: Option<String>,
    pub ban_evade: i32,
    pub profile_upload_ip: String,
    pub banner_upload_ip: String,
    pub profile_upload_region: String,
    pub banner_upload_region: String,
    pub color: String,
    pub secondary_color: String,
    pub comment_signature: String,
    pub comment_signature_html: String,
    pub profile_set_utc: i64,
    pub bannner_set_utc: i64,
    pub original_username: String,
    pub name_changed_utc: i64,
}

#[derive(Insertable, Serialize, Deserialize)]
#[diesel(table_name = users)]
/**
 * not sure if these are all the fields required to insert into the users table, might need more
 */
pub struct InsertUser {
    pub username: String,
    pub email: Option<String>,
    pub passhash: String,
    pub created_utc: i64,
}